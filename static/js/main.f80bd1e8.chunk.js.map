{"version":3,"sources":["Styles/index.js","Table/index.js","App/index.js","index.js"],"names":["styles","tableHeader","background","color","tableDataRow","borderTop","table","tabStyle","padding","border","Table","props","headers","React","useState","data","setData","ready","setReady","type","useEffect","newData","driver","points","calcDriverPoints","DID","sort","a","b","team","calcTeamPoints","TID","style","borderless","map","item","index","text","key","textAlign","th","t","name","tdDriver","tdTeam","td","races","race","result","findIndex","pointsSys","ptsSys","fastestLap","position","drivers","App","Container","Tabs","defaultActiveKey","Tab","eventKey","title","teams","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f80bd1e8.chunk.js","sourcesContent":["\r\n\r\n\r\nconst styles = {\r\n    tableHeader: {\r\n        background: '#333',\r\n        color: '#fff'\r\n    },\r\n    tableDataRow: {\r\n        borderTop: '1px solid #bebebe'\r\n    },\r\n    table: {\r\n        background: '#fff'\r\n    },\r\n    tabStyle: {\r\n        padding: '20px',\r\n        background: '#272727',\r\n        border: 'none'\r\n    }\r\n}\r\n\r\nexport default styles;\r\n","\r\n\r\n\r\nimport React from 'react';\r\n\r\nimport { Table as TableRB } from 'react-bootstrap';\r\n\r\nimport pointsSys from '../Data/points.json';\r\nimport races from '../Data/races.json';\r\n\r\nimport drivers from '../Data/drivers.json';\r\n\r\nimport styles from '../Styles';\r\n\r\nexport default function Table(props) {\r\n\r\n    const headers = props.headers ? props.headers : [];\r\n    const [data, setData] = React.useState(props.data ? props.data : []);\r\n    const [ready, setReady] = React.useState(false);\r\n    const type = props.type ? props.type : 'drivers';\r\n\r\n    // Calculate drivers' points and sort them\r\n    React.useEffect(() => {\r\n        if (!ready) {\r\n            if (type === 'drivers') {\r\n                // Drivers' standing\r\n                let newData = data;\r\n                for (let driver of newData) {\r\n                    driver.points = calcDriverPoints(driver.DID);\r\n                }\r\n    \r\n                newData = newData.sort((a, b) => b.points - a.points);\r\n                setData([...newData]);\r\n                setReady(true);\r\n            } else {\r\n                // Constructions' stadings\r\n                // ...\r\n                let newData = data;\r\n                for (let team of newData) {\r\n                    team.points = calcTeamPoints(team.TID);\r\n                }\r\n\r\n                newData = newData.sort((a, b) => b.points - a.points);\r\n                setData([...newData]);\r\n                setReady(true);\r\n            }\r\n        }\r\n    }, [data, ready, type]);\r\n\r\n\r\n    return (\r\n        <TableRB style={styles.table} borderless>\r\n            <thead>\r\n                <tr style={styles.tableHeader}>\r\n                    {headers.map((item, index) => {\r\n                        return th(index, item);\r\n                    })}\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                    {data.map((item, index) => {\r\n                        return td(index, item, type);\r\n                    })}\r\n            </tbody>\r\n        </TableRB>\r\n    );\r\n}\r\n\r\n// table header row\r\nfunction th(index, text) {\r\n    return (\r\n        <th key={index}\r\n            style={{textAlign: text === 'Points' ? 'right' : 'left'}}\r\n        >\r\n            {text}\r\n        </th>\r\n    );\r\n}\r\n\r\n// table data row\r\nfunction td(index, data, t) {\r\n    const type = t ? t : null;\r\n\r\n    if (type === 'drivers') {\r\n        return tdDriver(index, data);\r\n    }\r\n    if (type === 'teams') {\r\n        return tdTeam(index, data);\r\n    }\r\n}\r\n\r\n// driver data row\r\nfunction tdDriver(index, data) {\r\n    return (\r\n        <tr key={index}\r\n            style={\r\n                {...styles.tableDataRow, background: index % 2 === 0 ? '#fff' : '#f5f5f5'}\r\n            }\r\n        >\r\n            <td>{index + 1}</td>\r\n            <td><b>{data.name}</b></td>\r\n            <td>{data.team}</td>\r\n            <td style={{textAlign: 'right'}}>{data.points}</td>\r\n        </tr>\r\n    );\r\n}\r\n\r\n// team data row\r\nfunction tdTeam(index, data) {\r\n    return (\r\n        <tr key={index}\r\n            style={\r\n                {...styles.tableDataRow, background: index % 2 === 0 ? '#fff' : '#f5f5f5'}\r\n            }\r\n        >\r\n            <td>{index + 1}</td>\r\n            <td><b>{data.name}</b></td>\r\n            <td style={{textAlign: 'right'}}>{data.points}</td>\r\n        </tr>\r\n    );\r\n}\r\n\r\n// Calculate points for driver\r\n// param DID driver id example: 'HAM'\r\n// return points\r\nfunction calcDriverPoints(DID) {\r\n    let points = 0;\r\n\r\n    for (let race of races.races) {\r\n        const index = race.result.findIndex(result => result === DID);\r\n        if (index !== -1) {\r\n            points += pointsSys.ptsSys[index];\r\n        }\r\n        if (race.fastestLap.driver === DID && race.fastestLap.position < 11) {\r\n            points += 1;\r\n        }\r\n    }\r\n\r\n    return points;\r\n}\r\n\r\n// Calculate team points\r\n// param TID team id example: 'MER'\r\n// return points\r\nfunction calcTeamPoints(TID) {\r\n    let points = 0;\r\n    \r\n    for (let driver of drivers.drivers) {\r\n        if (driver.TID === TID) {\r\n            points += calcDriverPoints(driver.DID);\r\n        }\r\n    }\r\n\r\n    return points;\r\n}\r\n\r\n\r\n","\r\n\r\n\r\nimport React from 'react';\r\n\r\nimport { Container, Tabs, Tab } from 'react-bootstrap';\r\nimport Table from '../Table';\r\n\r\nimport drivers from '../Data/drivers.json';\r\nimport teams from '../Data/teams.json';\r\n\r\nimport styles from '../Styles';\r\n\r\nexport default function App() {\r\n\r\n    return (\r\n        <Container>\r\n\r\n            <Tabs defaultActiveKey=\"drivers\" style={styles.tabStyle}>\r\n                <Tab eventKey=\"drivers\" title=\"Drivers\">\r\n                    <Table\r\n                        headers={['#', 'Team', 'Points']}\r\n                        data={teams.teams}\r\n                        type='teams'\r\n                    >\r\n                    </Table>\r\n                </Tab>\r\n                <Tab eventKey=\"teams\" title=\"Teams\">\r\n                    <Table\r\n                        headers={['#', 'Name', 'Team', 'Points']}\r\n                        data={drivers.drivers}\r\n                        type='drivers'\r\n                        >\r\n                    </Table>\r\n                </Tab>\r\n            </Tabs>\r\n\r\n        </Container>\r\n    );\r\n}\r\n","\r\n\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './style.css';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}