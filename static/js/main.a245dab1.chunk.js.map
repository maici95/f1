{"version":3,"sources":["Styles/index.js","Table/index.js","App/index.js","index.js"],"names":["styles","tableHeader","background","color","tableDataRow","borderBottom","table","borderRadius","Table","props","headers","React","useState","data","setData","ready","setReady","useEffect","drivers","driver","points","calcPoints","DID","sort","a","b","style","borderless","map","item","index","text","key","textAlign","th","name","team","td","races","race","result","findIndex","pointsSys","ptsSys","fastestLap","position","App","Container","ReactDOM","render","document","getElementById"],"mappings":"4/DAiBeA,EAdA,CACXC,YAAa,CACTC,WAAY,OACZC,MAAO,QAEXC,aAAc,CACVC,aAAc,kBAElBC,MAAO,CACHJ,WAAY,OACZK,aAAc,QCDP,SAASC,EAAMC,GAE1B,IAAMC,EAAUD,EAAMC,QAAUD,EAAMC,QAAU,GAFf,EAGTC,IAAMC,SAASH,EAAMI,KAAOJ,EAAMI,KAAO,IAHhC,mBAG1BA,EAH0B,KAGpBC,EAHoB,OAIPH,IAAMC,UAAS,GAJR,mBAI1BG,EAJ0B,KAInBC,EAJmB,KAsBjC,OAfAL,IAAMM,WAAU,WACZ,IAAKF,EAAO,CACR,IADQ,EACJG,EAAUL,EADN,cAGWK,GAHX,IAGR,2BAA4B,CAAC,IAApBC,EAAmB,QACxBA,EAAOC,OAASC,EAAWF,EAAOG,MAJ9B,8BAORJ,EAAUA,EAAQK,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEL,OAASI,EAAEJ,UAC9CN,EAAQ,YAAII,IACZF,GAAS,MAEd,CAACH,EAAME,IAIN,kBAACP,EAAA,EAAD,CAASkB,MAAO1B,EAAOM,MAAOqB,YAAU,GACpC,+BACI,wBAAID,MAAO1B,EAAOC,aACbS,EAAQkB,KAAI,SAACC,EAAMC,GAChB,OAcxB,SAAYA,EAAOC,GACf,OACI,wBAAIC,IAAKF,EACLJ,MAAO,CAACO,UAAoB,WAATF,EAAoB,QAAU,SAEhDA,GAnBkBG,CAAGJ,EAAOD,QAI7B,+BACShB,EAAKe,KAAI,SAACC,EAAMC,GACb,OAmBxB,SAAYA,EAAOjB,GACf,OACI,wBAAImB,IAAKF,EAAOJ,MAAO1B,EAAOI,cAC1B,4BAAK0B,EAAQ,GACb,4BAAI,2BAAIjB,EAAKsB,OACb,4BAAKtB,EAAKuB,MACV,wBAAIV,MAAO,CAACO,UAAW,UAAWpB,EAAKO,SAzBpBiB,CAAGP,EAAOD,QAiCzC,SAASR,EAAWC,GAChB,IADqB,EACjBF,EAAS,EADQ,cAGJkB,EAAMA,OAHF,IAGrB,2BAA8B,CAAC,IAAtBC,EAAqB,QACpBT,EAAQS,EAAKC,OAAOC,WAAU,SAAAD,GAAM,OAAIA,IAAWlB,MAC1C,IAAXQ,IACAV,GAAUsB,EAAUC,OAAOb,IAE3BS,EAAKK,WAAWzB,SAAWG,GAAOiB,EAAKK,WAAWC,SAAW,KAC7DzB,GAAU,IATG,8BAarB,OAAOA,E,YCjFI,SAAS0B,IAGpB,OACI,kBAACC,EAAA,EAAD,KACI,kBAAC,EAAD,CACIrC,QAAS,CAAC,IAAK,OAAQ,OAAQ,UAC/BG,KAAMK,EAAQA,W,YCN9B8B,IAASC,OACL,kBAACH,EAAD,MACAI,SAASC,eAAe,W","file":"static/js/main.a245dab1.chunk.js","sourcesContent":["\r\n\r\n\r\nconst styles = {\r\n    tableHeader: {\r\n        background: '#333',\r\n        color: '#fff'\r\n    },\r\n    tableDataRow: {\r\n        borderBottom: '1px solid #ddd'\r\n    },\r\n    table: {\r\n        background: '#fff',\r\n        borderRadius: '5px'\r\n    }\r\n}\r\n\r\nexport default styles;\r\n","\r\n\r\n\r\nimport React from 'react';\r\n\r\nimport { Table as TableRB } from 'react-bootstrap';\r\n\r\nimport pointsSys from '../Data/points.json';\r\nimport races from '../Data/races.json';\r\n\r\nimport styles from '../Styles';\r\n\r\nexport default function Table(props) {\r\n\r\n    const headers = props.headers ? props.headers : [];\r\n    const [data, setData] = React.useState(props.data ? props.data : []);\r\n    const [ready, setReady] = React.useState(false);\r\n\r\n    // Calculate drivers' points and sort them\r\n    React.useEffect(() => {\r\n        if (!ready) {\r\n            let drivers = data;\r\n\r\n            for (let driver of drivers) {\r\n                driver.points = calcPoints(driver.DID);\r\n            }\r\n\r\n            drivers = drivers.sort((a, b) => b.points - a.points);\r\n            setData([...drivers]);\r\n            setReady(true);\r\n        }\r\n    }, [data, ready]);\r\n\r\n\r\n    return (\r\n        <TableRB style={styles.table} borderless>\r\n            <thead>\r\n                <tr style={styles.tableHeader}>\r\n                    {headers.map((item, index) => {\r\n                        return th(index, item);\r\n                    })}\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                    {data.map((item, index) => {\r\n                        return td(index, item);\r\n                    })}\r\n            </tbody>\r\n        </TableRB>\r\n    );\r\n}\r\n\r\n// table header row\r\nfunction th(index, text) {\r\n    return (\r\n        <th key={index}\r\n            style={{textAlign: text === 'Points' ? 'right' : 'left'}}\r\n        >\r\n            {text}\r\n        </th>\r\n    );\r\n}\r\n\r\n// table data row\r\nfunction td(index, data) {\r\n    return (\r\n        <tr key={index} style={styles.tableDataRow}>\r\n            <td>{index + 1}</td>\r\n            <td><b>{data.name}</b></td>\r\n            <td>{data.team}</td>\r\n            <td style={{textAlign: 'right'}}>{data.points}</td>\r\n        </tr>\r\n    );\r\n}\r\n\r\n// Calculate points for driver\r\n// param DID driver id example: 'HAM'\r\n// return points\r\nfunction calcPoints(DID) {\r\n    let points = 0;\r\n\r\n    for (let race of races.races) {\r\n        const index = race.result.findIndex(result => result === DID);\r\n        if (index !== -1) {\r\n            points += pointsSys.ptsSys[index];\r\n        }\r\n        if (race.fastestLap.driver === DID && race.fastestLap.position < 11) {\r\n            points += 1;\r\n        }\r\n    }\r\n\r\n    return points;\r\n}\r\n","\r\n\r\n\r\nimport React from 'react';\r\n\r\nimport { Container } from 'react-bootstrap';\r\nimport Table from '../Table';\r\n\r\nimport drivers from '../Data/drivers.json';\r\n\r\nexport default function App() {\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <Table\r\n                headers={['#', 'Name', 'Team', 'Points']}\r\n                data={drivers.drivers}\r\n            >\r\n\r\n            </Table>\r\n        </Container>\r\n    );\r\n}\r\n","\r\n\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './style.css';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}