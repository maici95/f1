{"version":3,"sources":["Styles/index.js","Table/index.js","App/index.js","index.js"],"names":["styles","tableHeader","background","color","tableDataRow","borderTop","table","borderBottom","tabStyle","padding","border","Table","props","headers","React","useState","data","setData","ready","setReady","type","selRace","race","useEffect","newData","driver","points","calcDriverPoints","DID","sort","a","b","team","calcTeamPoints","TID","races","find","item","name","result","d","drivers","push","style","borderless","map","index","text","key","textAlign","th","t","tdDriver","tdTeam","fastestLap","fLapPoint","position","pointsSys","ptsSys","tdResult","td","findIndex","App","setSelRace","Container","Tabs","defaultActiveKey","Tab","eventKey","title","teams","Dropdown","Toggle","variant","Menu","onClick","event","target","innerHTML","Item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.514e0cb0.chunk.js","sourcesContent":["\r\n\r\n\r\nconst styles = {\r\n    tableHeader: {\r\n        background: '#333',\r\n        color: '#fff'\r\n    },\r\n    tableDataRow: {\r\n        borderTop: '1px solid #bebebe'\r\n    },\r\n    table: {\r\n        background: '#fff',\r\n        borderBottom: '2px solid #bebebe'\r\n    },\r\n    tabStyle: {\r\n        padding: '20px',\r\n        background: '#272727',\r\n        border: 'none'\r\n    }\r\n}\r\n\r\nexport default styles;\r\n","\r\n\r\n\r\nimport React from 'react';\r\n\r\nimport { Table as TableRB } from 'react-bootstrap';\r\n\r\nimport pointsSys from '../Data/points.json';\r\nimport races from '../Data/races.json';\r\nimport drivers from '../Data/drivers.json';\r\n\r\nimport styles from '../Styles';\r\n\r\nexport default function Table(props) {\r\n\r\n    const headers = props.headers ? props.headers : [];\r\n    const [data, setData] = React.useState(props.data ? props.data : []);\r\n    const [ready, setReady] = React.useState(false);\r\n    const type = props.type ? props.type : 'drivers';\r\n    const selRace = props.race ? props.race : null;\r\n\r\n    // Calculate drivers' points and sort them\r\n    React.useEffect(() => {\r\n        if (!ready) {\r\n            if (type === 'drivers') {\r\n                // Drivers' standing\r\n                let newData = data;\r\n                for (let driver of newData) {\r\n                    driver.points = calcDriverPoints(driver.DID);\r\n                }\r\n    \r\n                newData = newData.sort((a, b) => b.points - a.points);\r\n                setData([...newData]);\r\n                setReady(true);\r\n            }\r\n            \r\n            if (type === 'teams') {\r\n                // Constructions' stadings\r\n                let newData = data;\r\n                for (let team of newData) {\r\n                    team.points = calcTeamPoints(team.TID);\r\n                }\r\n\r\n                newData = newData.sort((a, b) => b.points - a.points);\r\n                setData([...newData]);\r\n                setReady(true);\r\n            }\r\n\r\n        }\r\n\r\n    }, [data, ready, type]);\r\n\r\n    // Format selected race result\r\n    React.useEffect(() => {\r\n        if (type === 'results') {\r\n            const race = races.races.find(item => item.name === selRace);\r\n            let newData = [];\r\n    \r\n            if (race) {\r\n                for (let driver of race.result) {\r\n                    const d = drivers.drivers.find(item => item.DID === driver);\r\n                    newData.push({\r\n                        name: d.name,\r\n                        team: d.team,\r\n                        DID: d.DID\r\n                    });\r\n                }\r\n            }\r\n\r\n            setData([...newData]);\r\n        }\r\n\r\n    }, [selRace, type]);\r\n\r\n\r\n\r\n    return (\r\n        <TableRB style={styles.table} borderless>\r\n            <thead>\r\n                <tr style={styles.tableHeader}>\r\n                    {headers.map((item, index) => {\r\n                        return th(index, item);\r\n                    })}\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                    {data.map((item, index) => {\r\n                        return td(index, item, type, selRace);\r\n                    })}\r\n            </tbody>\r\n        </TableRB>\r\n    );\r\n}\r\n\r\n// table header row\r\nfunction th(index, text) {\r\n    return (\r\n        <th key={index}\r\n            style={{textAlign: text === 'Points' ? 'right' : 'left'}}\r\n        >\r\n            {text}\r\n        </th>\r\n    );\r\n}\r\n\r\n// table data row\r\nfunction td(index, data, t, selRace) {\r\n    const type = t ? t : null;\r\n\r\n    if (type === 'drivers') {\r\n        return tdDriver(index, data);\r\n    }\r\n    if (type === 'teams') {\r\n        return tdTeam(index, data);\r\n    }\r\n    if (type === 'results') {\r\n        return tdResult(index, data, selRace);\r\n    }\r\n}\r\n\r\n// driver data row\r\nfunction tdDriver(index, data) {\r\n    return (\r\n        <tr key={index}\r\n            style={\r\n                {...styles.tableDataRow, background: index % 2 === 0 ? '#fff' : '#f5f5f5'}\r\n            }\r\n        >\r\n            <td>{index + 1}</td>\r\n            <td><b>{data.name}</b></td>\r\n            <td>{data.team}</td>\r\n            <td style={{textAlign: 'right'}}>{data.points}</td>\r\n        </tr>\r\n    );\r\n}\r\n\r\n// team data row\r\nfunction tdTeam(index, data) {\r\n    return (\r\n        <tr key={index}\r\n            style={\r\n                {...styles.tableDataRow, background: index % 2 === 0 ? '#fff' : '#f5f5f5'}\r\n            }\r\n        >\r\n            <td>{index + 1}</td>\r\n            <td><b>{data.name}</b></td>\r\n            <td style={{textAlign: 'right'}}>{data.points}</td>\r\n        </tr>\r\n    );\r\n}\r\n\r\n// result data row\r\nfunction tdResult(index, data, selRace) {\r\n    const fastestLap = races.races.find(race => race.name === selRace).fastestLap;\r\n    let fLapPoint = false;\r\n\r\n    if (fastestLap.driver === data.DID && fastestLap.position < 11) {\r\n        fLapPoint = true;\r\n    }\r\n\r\n    return (\r\n    <tr key={index}\r\n        style={\r\n            {...styles.tableDataRow, background: index % 2 === 0 ? '#fff' : '#f5f5f5'}\r\n        }\r\n    >\r\n        <td>{index + 1}</td>\r\n        <td><b>{data.name}</b></td>\r\n        <td>{data.team}</td>\r\n        <td style={{textAlign: 'right'}}>{pointsSys.ptsSys[index] + (fLapPoint ? 1 : 0)}</td>\r\n    </tr>\r\n    );\r\n}\r\n\r\n// Calculate points for driver\r\n// param DID driver id example: 'HAM'\r\n// return points\r\nfunction calcDriverPoints(DID) {\r\n    let points = 0;\r\n\r\n    for (let race of races.races) {\r\n        const index = race.result.findIndex(result => result === DID);\r\n        if (index !== -1) {\r\n            points += pointsSys.ptsSys[index];\r\n        }\r\n        if (race.fastestLap.driver === DID && race.fastestLap.position < 11) {\r\n            points += 1;\r\n        }\r\n    }\r\n\r\n    return points;\r\n}\r\n\r\n// Calculate team points\r\n// param TID team id example: 'MER'\r\n// return points\r\nfunction calcTeamPoints(TID) {\r\n    let points = 0;\r\n    \r\n    for (let driver of drivers.drivers) {\r\n        if (driver.TID === TID) {\r\n            points += calcDriverPoints(driver.DID);\r\n        }\r\n    }\r\n\r\n    return points;\r\n}\r\n\r\n\r\n","\r\n\r\n\r\nimport React from 'react';\r\n\r\nimport { Container, Tabs, Tab, Dropdown } from 'react-bootstrap';\r\nimport Table from '../Table';\r\n\r\nimport drivers from '../Data/drivers.json';\r\nimport teams from '../Data/teams.json';\r\nimport races from '../Data/races.json';\r\n\r\nimport styles from '../Styles';\r\n\r\nexport default function App() {\r\n\r\n    const [selRace, setSelRace] = React.useState('Australia');\r\n\r\n    return (\r\n        <Container>\r\n\r\n            <Tabs defaultActiveKey=\"drivers\" style={styles.tabStyle}>\r\n                <Tab eventKey=\"drivers\" title=\"Drivers\">\r\n                    <Table\r\n                        headers={['#', 'Name', 'Team', 'Points']}\r\n                        data={drivers.drivers}\r\n                        type='drivers'\r\n                    >\r\n                    </Table>\r\n                </Tab>\r\n                <Tab eventKey=\"teams\" title=\"Teams\">\r\n                    <Table\r\n                        headers={['#', 'Team', 'Points']}\r\n                        data={teams.teams}\r\n                        type='teams'\r\n                        >\r\n                    </Table>\r\n                </Tab>\r\n                <Tab eventKey=\"results\" title=\"Results\">\r\n                    <Container style={{background: '#333', padding: '10px'}}>\r\n                        <Dropdown>\r\n                            <Dropdown.Toggle variant=\"primary\">\r\n                                {selRace}\r\n                            </Dropdown.Toggle>\r\n                            <Dropdown.Menu onClick={(event) => setSelRace(event.target.innerHTML)}>\r\n                                {races.races.map((race, index) => {\r\n                                    return (\r\n                                        <Dropdown.Item key={index}>{race.name}</Dropdown.Item>\r\n                                    );\r\n                                })}\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                    </Container>\r\n                    <Table\r\n                        headers={['#', 'Name', 'Team', 'Points']}\r\n                        type=\"results\"\r\n                        race={selRace}\r\n                        data={[]}\r\n                    >\r\n                    </Table>\r\n                </Tab>\r\n            </Tabs>\r\n\r\n        </Container>\r\n    );\r\n}\r\n","\r\n\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './style.css';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}